name: PHP CI

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "feature/**" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ '8.2' ]
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          coverage: none
          extensions: mbstring, intl, zip, dom, curl, json, sqlite3

      # Composerプラグイン許可（実行環境だけに反映）
      - name: Configure Composer allow-plugins
        run: |
          composer config --no-plugins allow-plugins.composer/installers true
          composer config --no-plugins allow-plugins.dealerdirect/phpcodesniffer-composer-installer true
          composer config --no-plugins allow-plugins.johnpbloch/wordpress-core-installer true

      - name: Get Composer cache dir
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install deps
        run: composer install --no-interaction --prefer-dist --no-progress

      # WPCSを確実に導入（WordPress-Extraを使える状態に）
      - name: Ensure WPCS standard
        run: composer require wp-coding-standards/wpcs:^3 --no-interaction --prefer-dist || true

      # SQLiteドライバを確実に用意（composer→無ければrawダウンロード）
      - name: Ensure SQLite driver (composer or fallback)
        run: |
          set -e
          if ! test -f vendor/aaemnnosttv/wp-sqlite-db/src/db.php; then
            composer require aaemnnosttv/wp-sqlite-db:^1.3 --no-interaction --prefer-dist || true
          fi
          if ! test -f vendor/aaemnnosttv/wp-sqlite-db/src/db.php; then
            echo "[fallback] raw fetch"
            mkdir -p vendor/aaemnnosttv/wp-sqlite-db/src
            curl -sSLo vendor/aaemnnosttv/wp-sqlite-db/src/db.php \
              https://raw.githubusercontent.com/aaemnnosttv/wp-sqlite-db/v1.3.2/src/db.php
          fi
          test -f vendor/aaemnnosttv/wp-sqlite-db/src/db.php || (echo "db.php still missing"; exit 1)

      - name: Prepare WP tests (SQLite)
        run: |
          set -e
          mkdir -p tests/wordpress/wp-content
          cp vendor/aaemnnosttv/wp-sqlite-db/src/db.php tests/wordpress/wp-content/db.php
          mkdir -p tmp
          chmod -R 777 tmp

      # ★ PHPCSを高速化：対象を絞り、巨大ディレクトリは除外
      - name: PHPCS (fast & scoped)
        run: |
          if [ -x vendor/bin/phpcs ]; then
            set -e
            paths=""
            for d in includes src lib app; do [ -d "$d" ] && paths="$paths $d"; done
            [ -d tests ] && paths="$paths tests"
            # 直下のPHPファイルも対象に（例：plugin.php など）
            shopt -s nullglob; for f in *.php; do paths="$paths $f"; done
            if [ -z "$paths" ]; then paths="."; fi
            echo "PHPCS targets:$paths"
            vendor/bin/phpcs \
              --standard=WordPress-Extra \
              --extensions=php \
              --ignore=vendor/*,tests/wordpress/*,tmp/*,.git/*,.github/*,node_modules/* \
              $paths
          else
            echo "phpcs not installed; skipping"
          fi

      - name: PHPStan (if present)
        run: |
          if [ -x vendor/bin/phpstan ]; then
            vendor/bin/phpstan analyse
          else
            echo "phpstan not installed; skipping"
          fi

      - name: PHPUnit
        run: vendor/bin/phpunit -c phpunit.xml.dist
